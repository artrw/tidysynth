smoking_out %>% grab_predictors()
smoking_out %>% grab_predictors(type="controls")
smoking_out %>% grab_predictor_weights()
smoking_out %>% grab_predictor_weights()
smoking_out %>% grab_predictor_weights(placebo=T)
smoking_out %>% grab_predictor_weights(placebo=T)
generate_placebos=T) %>%
' data(smoking)
smoking_out <-
smoking %>%
# initial the synthetic control object
synthetic_control(outcome = cigsale,
unit = state,
time = year,
i_unit = "California",
i_time = 1988,
generate_placebos=T) %>%
# Generate the aggregate predictors used to generate the weights
generate_predictor(time_window=1980:1988,
lnincome = mean(lnincome, na.rm = T),
retprice = mean(retprice, na.rm = T),
age15to24 = mean(age15to24, na.rm = T)) %>%
generate_predictor(time_window=1984:1988,
beer = mean(beer, na.rm = T)) %>%
generate_predictor(time_window=1975,
cigsale_1975 = cigsale) %>%
generate_predictor(time_window=1980,
cigsale_1980 = cigsale) %>%
generate_predictor(time_window=1988,
cigsale_1988 = cigsale) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window =1970:1988,
Margin.ipop=.02,Sigf.ipop=7,Bound.ipop=6) %>%
# Generate the synthetic control
generate_control()
)
)
""
''
''
# Smoking example data
data(smoking)
smoking_out <-
smoking %>%
# initial the synthetic control object
synthetic_control(outcome = cigsale,
unit = state,
time = year,
i_unit = "California",
i_time = 1988,
generate_placebos=T) %>%
# Generate the aggregate predictors used to generate the weights
generate_predictor(time_window=1980:1988,
lnincome = mean(lnincome, na.rm = T),
retprice = mean(retprice, na.rm = T),
age15to24 = mean(age15to24, na.rm = T)) %>%
generate_predictor(time_window=1984:1988,
beer = mean(beer, na.rm = T)) %>%
generate_predictor(time_window=1975,
cigsale_1975 = cigsale) %>%
generate_predictor(time_window=1980,
cigsale_1980 = cigsale) %>%
generate_predictor(time_window=1988,
cigsale_1988 = cigsale) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window =1970:1988,
Margin.ipop=.02,Sigf.ipop=7,Bound.ipop=6) %>%
# Generate the synthetic control
generate_control()
smoking_out %>% grab_predictor_weights(placebo=T)
smoking_out %>% grab_predictor_weights()
library(tidysynth)
smoking_out %>% grab_predictor_weights(placebo=T)
smoking_out %>% grab_predictor_weights()
smoking_out %>% grab_predictor_weights(placebo=T)
smoking_out %>% grab_loss()
library(tidysynth)
smoking_out %>% grab_loss()
library(tidysynth)
smoking_out %>% grab_loss()
?Synth::synth()
library(tidysynth)
smoking_out %>% grab_loss()
smoking_out <-
smoking %>%
# initial the synthetic control object
synthetic_control(outcome = cigsale,
unit = state,
time = year,
i_unit = "California",
i_time = 1988,
generate_placebos=F) %>%
# Generate the aggregate predictors used to generate the weights
generate_predictor(time_window=1980:1988,
lnincome = mean(lnincome, na.rm = T),
retprice = mean(retprice, na.rm = T),
age15to24 = mean(age15to24, na.rm = T)) %>%
generate_predictor(time_window=1984:1988,
beer = mean(beer, na.rm = T)) %>%
generate_predictor(time_window=1975,
cigsale_1975 = cigsale) %>%
generate_predictor(time_window=1980,
cigsale_1980 = cigsale) %>%
generate_predictor(time_window=1988,
cigsale_1988 = cigsale) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window =1970:1988,
Margin.ipop=.02,Sigf.ipop=7,Bound.ipop=6) %>%
# Generate the synthetic control
generate_control()
smoking_out %>% grab_loss()
smoking %>%
# initial the synthetic control object
synthetic_control(outcome = cigsale,
unit = state,
time = year,
i_unit = "California",
i_time = 1988,
generate_placebos=T) %>%
# Generate the aggregate predictors used to generate the weights
generate_predictor(time_window=1980:1988,
lnincome = mean(lnincome, na.rm = T),
retprice = mean(retprice, na.rm = T),
age15to24 = mean(age15to24, na.rm = T)) %>%
generate_predictor(time_window=1984:1988,
beer = mean(beer, na.rm = T)) %>%
generate_predictor(time_window=1975,
cigsale_1975 = cigsale) %>%
generate_predictor(time_window=1980,
cigsale_1980 = cigsale) %>%
generate_predictor(time_window=1988,
cigsale_1988 = cigsale) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window =1970:1988,
Margin.ipop=.02,Sigf.ipop=7,Bound.ipop=6) %>%
# Generate the synthetic control
generate_control()
# grab the MSPE loss from the optimization of the weights.
smoking_out %>% grab_loss()
smoking_out <-
smoking %>%
# initial the synthetic control object
synthetic_control(outcome = cigsale,
unit = state,
time = year,
i_unit = "California",
i_time = 1988,
generate_placebos=T) %>%
# Generate the aggregate predictors used to generate the weights
generate_predictor(time_window=1980:1988,
lnincome = mean(lnincome, na.rm = T),
retprice = mean(retprice, na.rm = T),
age15to24 = mean(age15to24, na.rm = T)) %>%
generate_predictor(time_window=1984:1988,
beer = mean(beer, na.rm = T)) %>%
generate_predictor(time_window=1975,
cigsale_1975 = cigsale) %>%
generate_predictor(time_window=1980,
cigsale_1980 = cigsale) %>%
generate_predictor(time_window=1988,
cigsale_1988 = cigsale) %>%
# Generate the fitted weights for the synthetic control
generate_weights(optimization_window =1970:1988,
Margin.ipop=.02,Sigf.ipop=7,Bound.ipop=6) %>%
# Generate the synthetic control
generate_control()
# grab the MSPE loss from the optimization of the weights.
smoking_out %>% grab_loss()
smoking_out %>% grab_synthetic_control()
smoking_out %>% grab_synthetic_control()
smoking_out %>% grab_synthetic_control(placebo=T)
smoking_out %>% grab_signiciance(time_window = 1970:2000)
smoking_out %>% grab_signficance(time_window = 1970:2000)
1/12
1/13
1/14
1/15
1/16
1/17
1/18
1/19
1/20
smoking_out %>% grab_signficance(time_window = 1970:2000)
smoking_out %>% grab_balance_table()
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = F)
context("Test synthetic_control() initialization of the synth_tbl object")
# Generate FAKE DATA for the TESTs ----------------------------------------
set.seed(123)
# Treatment unit
treated <-
tibble::tibble(unit= "a",
time= 1990:2000,
outcome = runif(11,-1,1),
treatment_value = c(rep(0,6),1,2,3,4,5),
intervention_outcome = outcome + treatment_value,
x1 = rnorm(11,0,1),
x2 = rnorm(11,0,1),
x3 = rnorm(11,0,1))
# Control units
controls <-
dplyr::bind_rows(
tidyr::crossing(tibble::tibble(unit=c("b","c","d","e")),
tibble::tibble(time=1990:2000))) %>%
dplyr::mutate(outcome = runif(44,-1,1),
x1 = rnorm(44,0,1),
x2 = rnorm(44,0,1),
x3 = rnorm(44,0,1))
dat <- dplyr::bind_rows(treated,controls) %>% tidyr::replace_na(list(treatment_value=0))
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = T)
synth_out
synth_out %>% grab_outcome()
expect_equivalent(synth_out %>% grab_outcome(),
synth_out$.outcome[[1]])
install.packages("testthat")
require(testthat)
expect_equivalent(synth_out %>% grab_outcome(),
synth_out$.outcome[[1]])
synth_out$.outcome[[1]]
synth_out %>% grab_outcome(placebo=T)
synth_out %>% grab_outcome(placebo=T) %>%
.[7,5]
expect_equivalent(synth_out %>% grab_outcome(placebo=T) %>% .[7,5],
tibble(b=0.226))
expect_equivalent(synth_out %>% grab_outcome(placebo=T) %>% .[7,5],
tibble::tibble(b=0.226))
expect_equivalent(synth_out %>% grab_outcome(placebo=T) %>% .[7,5] %>% round(.,3),
tibble::tibble(b=0.226))
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = F) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
synth_out
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = F) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
synth_out$.predictors[[1]]
synth_out$.predictors[[1]]
synth_out %>% grab_predictors()
expect_equivalent(synth_out %>% grab_predictors(),
synth_out$.predictors[[1]])
synth_out %>% grab_predictors(placebo=T)
synth_out %>% grab_predictors()
# Treatment unit
treated <-
tibble::tibble(unit= "a",
time= 1990:2000,
outcome = runif(11,-1,1),
treatment_value = c(rep(0,6),1,2,3,4,5),
intervention_outcome = outcome + treatment_value,
x1 = rnorm(11,0,1),
x2 = rnorm(11,0,1),
x3 = rnorm(11,0,1))
# Control units
controls <-
dplyr::bind_rows(
tidyr::crossing(tibble::tibble(unit=c("b","c","d","e")),
tibble::tibble(time=1990:2000))) %>%
dplyr::mutate(outcome = runif(44,-1,1),
x1 = rnorm(44,0,1),
x2 = rnorm(44,0,1),
x3 = rnorm(44,0,1))
dat <- dplyr::bind_rows(treated,controls) %>% tidyr::replace_na(list(treatment_value=0))
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = F) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
# grab should be the same as directly tapping into the data.
expect_equivalent(synth_out %>% grab_predictors(),
synth_out$.predictors[[1]])
synth_out %>% grab_predictors(placebo=T)
synth_out %>% grab_outcome(placebo=T)
synth_out %>% grab_predictors(placebo=T)
synth_out %>% grab_predictors(placebo=T)
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = T) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
# grab should be the same as directly tapping into the data.
expect_equivalent(synth_out %>% grab_predictors(),
synth_out$.predictors[[1]])
synth_out %>% grab_predictors(placebo=T)
synth_out %>% grab_predictors(placebo=T)
synth_out %>% grab_predictors(placebo=T) %>% .[5,4]
synth_out %>% grab_predictors(placebo=T) %>% .[5,5]
synth_out %>% grab_predictors(placebo=T) %>% .[5,5]
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble(b = -.414)
)
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = T) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
# grab should be the same as directly tapping into the data.
expect_equivalent(synth_out %>% grab_predictors(),
synth_out$.predictors[[1]])
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
tibble::tibble(b = -.414)
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
synth_out %>% grab_predictors()
synth_out$.predictors[[1]]
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
tibble::tibble(b = -.414)
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = T) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
# grab should be the same as directly tapping into the data.
expect_equivalent(synth_out %>% grab_predictors(),
synth_out$.predictors[[1]])
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
expect_equivalent(synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3),
tibble::tibble(b = -.414))
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
# Generate FAKE DATA for the TESTs ----------------------------------------
set.seed(123)
# Treatment unit
treated <-
tibble::tibble(unit= "a",
time= 1990:2000,
outcome = runif(11,-1,1),
treatment_value = c(rep(0,6),1,2,3,4,5),
intervention_outcome = outcome + treatment_value,
x1 = rnorm(11,0,1),
x2 = rnorm(11,0,1),
x3 = rnorm(11,0,1))
# Control units
controls <-
dplyr::bind_rows(
tidyr::crossing(tibble::tibble(unit=c("b","c","d","e")),
tibble::tibble(time=1990:2000))) %>%
dplyr::mutate(outcome = runif(44,-1,1),
x1 = rnorm(44,0,1),
x2 = rnorm(44,0,1),
x3 = rnorm(44,0,1))
dat <- dplyr::bind_rows(treated,controls) %>% tidyr::replace_na(list(treatment_value=0))
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1995,
generate_placebos = T) %>%
generate_predictor(time_window = 1990:1995,
x1 = mean(x1),
x2 = mean(x2),
x3 = mean(x3))
synth_out %>% grab_predictors(placebo=T) %>% .[5,5] %>% round(.,3)
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1990,
generate_placebos = T) %>%
generate_predictor(time_window = 1980:1990,
x1 = mean(x1)) %>%
generate_weights(.)
synth_out %>% grab_unit_weights()
expect_equivalent(synth_out %>% grab_unit_weights(),unit_weights)
context("Test generate_weights()")
# Generate Fake Data for Test ---------------------------------------------
set.seed(123)
time_span <- 1980:2000
unit_span <- c("a","b","c","d","e")
unit <- rep(unit_span,length(time_span)); unit <- unit[order(unit)]
time <- rep(time_span,length(unit_span))
N = length(time)
x1 <- rnorm(N,0,.1)
tr <- rep(0,N); tr[12:length(time_span)] <- 1
e  <- rnorm(N,0,.1)
y  <- rep(NA,N)
y <- x1 + tr + e
# Data generated
dat <- tibble::tibble(unit,time,outcome=y,x1)
# Expected Weights
unit_weights <-
tibble::tibble(
unit = c("b", "c", "d", "e"),
weight = c(0.14593576401803,0.205551760722976,0.175872688538295,
0.472639786639596)
) %>% dplyr::mutate(weight=round(weight,3))
predictor_weights <-
tibble::tibble(
variable = c("x1"),
weight = c(1)
)
fit_loss =
tibble::tibble(
variable_mspe = c(0.0169512922594286),
control_unit_mspe = c(1.33433340766317e-10)
)
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1990,
generate_placebos = T) %>%
generate_predictor(time_window = 1980:1990,
x1 = mean(x1)) %>%
generate_weights(.)
library(tidysynth)
synth_out <- synthetic_control(data=dat,outcome = outcome,time = time,
unit = unit,i_unit = "a",i_time=1990,
generate_placebos = T) %>%
generate_predictor(time_window = 1980:1990,
x1 = mean(x1)) %>%
generate_weights(.)
expect_equivalent(synth_out %>% grab_unit_weights(),
unit_weights)
unit_weights
expect_equivalent(synth_out %>% grab_unit_weights() %>%
dplyr::mutate(weight=round(weight,3),
unit_weights)
})
expect_equivalent(synth_out %>% grab_unit_weights() %>%
dplyr::mutate(weight=round(weight,3)),
unit_weights)
synth_out %>% grab_unit_weights(placebo = T)
synth_out %>% grab_unit_weights(placebo = T) %>%
dplyr::select(.id=="b")
synth_out %>% grab_unit_weights(placebo = T) %>%
dplyr::select(.id=="b")
synth_out %>%
grab_unit_weights(placebo = T)
synth_out %>%
grab_unit_weights(placebo = T) %>%
dplyr::filter(.id=="b")
synth_out %>%
grab_unit_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
select(unit,weight)
synth_out %>%
grab_unit_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(unit,weight)
synth_out$.unit_weights[[2]]
synth_out$.unit_weights[[3]]
synth_out
synth_out$.unit_weights[[3]]
synth_out %>%
grab_unit_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(unit,weight)
expect_equivalent(
synth_out %>%
grab_unit_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(unit,weight),
synth_out$.unit_weights[[3]]
)
synth_out %>% grab_predictor_weights()
# Grab predictor weights
expect_equivalent(synth_out %>% grab_predictor_weights(),
predictor_weights)
synth_out %>% grab_predictor_weights(placebo = 1)
synth_out %>% grab_predictor_weights(placebo = T)
synth_out %>% grab_predictor_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(variable,weight)
expect_equivalent(
synth_out %>%
grab_predictor_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(variable,weight),
synth_out$.predictor_weights[[3]]
)
synth_out$.predictor_weights[[3]]
expect_equivalent(
synth_out %>%
grab_predictor_weights(placebo = T) %>%
dplyr::filter(.id=="b") %>%
dplyr::select(variable,weight),
synth_out$.predictor_weights[[3]]
)
synth_out %>% grab_loss()
synth_out %>% grab_loss() %>% .[5,5],
})
synth_out %>% grab_loss() %>% .[5,5]
synth_out %>% grab_loss() %>% .[5,4]
expect_equivalent(synth_out %>% grab_loss() %>% .[5,4] %>% round(.,3),
tibble(control_unit_mspe = 0.998)
})
expect_equivalent(synth_out %>% grab_loss() %>% .[5,4] %>% round(.,3),
tibble(control_unit_mspe = 0.998))
expect_equivalent(synth_out %>% grab_loss() %>% .[5,4] %>% round(.,3),
tibble(control_unit_mspe = 0.998))
expect_equivalent(synth_out %>% grab_loss() %>% .[5,4] %>% round(.,3),
tibble::tibble(control_unit_mspe = 0.998))
